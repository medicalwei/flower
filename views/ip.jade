div.page-header
  h1 #{ip} 
    small Live status
div.row
  div.total.span8
    h2 Total
    div.number #{ipData.getTotalString()} MiB
  div.updown.span4
    h2 Upload
    div.number #{ipData.getUploadString()} MiB
    h2 Download
    div.number #{ipData.getDownloadString()} MiB
div.row
  div.span12
    h2 Hourly view
    noscript Please enable JavaScript for graph plotting.
    div#graph
    script
      var plotData=!{JSON.stringify(ipData.hourlyData.getPlotData())};
      $.plot($("#graph"), plotData, {
          series: {stack: 0, lines: {show: false, steps: false}, bars: {show: true, barWidth: 1}},
          grid: {hoverable: true},
          xaxis: {tickSize: 1, tickDecimals: 0},
          yaxis: {ticks: binaryTickGenerator}
      });

      function binaryTickGenerator(axis) {
        var res = [], i = Math.floor(axis.min / Math.PI);
        var c = axis.max;
        var tickSize = 1;
        while (c > 10) {
          c /= 2;
          tickSize *= 2;
        }
        
        do {
          var v = i * tickSize;
          res.push([v, suffixFormatter(v)]);
          ++i;
        } while (v < axis.max);
        
        return res;
      }

      function suffixFormatter(val) {
        if (val >= 1024) {
          return (val/1024) + "G";
        } else if (val == 0){
          return "0B";
        } else {
          return val + "M";
        }
      }

      function showTooltip(x, y, contents) {
        $('<div id="tooltip"/>').css( {
          position: 'absolute',
          display: 'none',
          top: y,
          left: x,
          border: '1px solid #fdd',
          padding: '2px',
          'background-color': '#fee'
        }).text(contents).appendTo("body").show();
      }

      var previousPoint = null;
      $("#graph").bind("plothover", function (event, pos, item) {
        if (item) {
          if (previousPoint != item.dataIndex) {
            previousPoint = item.dataIndex;
            $("#tooltip").remove();
            var idx = item.dataIndex;

            download = plotData[0].data[idx][1];
            upload = plotData[1].data[idx][1];
            total = download+upload;
            showTooltip(item.pageX, $("#graph").offset().top,
              total.toFixed(2) + " MiB");
          }
        }
        else {
          previousPoint = null;
          $("#tooltip").remove();
        }
      });
